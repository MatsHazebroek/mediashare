import type { NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import Sidebar from "~/components/sidebar";
import EditProfileModal from "~/components/profile/editProfileModal";
import { AiOutlineLink } from "react-icons/ai";
import { BsCalendarDate } from "react-icons/bs";
import { api } from "~/utils/api";
import Link from "next/link";
import DeleteProfile from "~/components/profile/deleteProfile";
import ProfileFollow from "~/components/profile/profileFollow";
import toast from "react-hot-toast";
import PostOfUser from "../../components/profile/postOfUser/postOfUser";

type params = {
  userName: string;
};

const PageContent: NextPage = () => {
  const { data: session, status } = useSession();
  const params = useRouter().query as params;
  const users = api.profile.get.useQuery(params.userName);

  const followers = api.profile.follow.useMutation({
    onSuccess: (data) => {
      if (data) toast.success("Gevolgd");
      if (!data) toast.success("Ontvolgd");
    },
  });

  const submit = () => {
    followers.mutate(users.data?.id || "");
  };
  if (status == "authenticated") {
    console.log(users.data?.followers);
    console.log(session.user.id);
  }

  return (
    <>
      <Head>
        <title>Twitter - {params.userName}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Sidebar>
          {users.isError || users == null ? (
            <></>
          ) : (
            <div className="overflow flex h-full w-full justify-center">
              <div className="relative m-2 w-full max-w-[1546px] bg-white shadow-md">
                <div className="flex h-1/3 max-h-[432px] items-start justify-center bg-slate-600">
                  {typeof users.data?.banner == "string" && (
                    <Image
                      src={users.data?.banner}
                      alt={"Image"}
                      width={1546}
                      height={432}
                      className={"max-h-full object-scale-down "}
                    />
                  )}

                  {typeof users.data?.image == "string" ? (
                    <Image
                      src={users.data?.image}
                      height={200}
                      width={200}
                      alt={"Foto"}
                      className="absolute left-4 mt-64 h-32 w-32 rounded-full border-4 border-white bg-white"
                    />
                  ) : null}
                </div>
                <div className="flex items-center">
                  <div className="ml-5 mt-16">
                    <div className="text-2xl">{users.data?.username}</div>
                    <div className="mt-2">
                      {users.data?.status != null && users.data?.status}
                    </div>
                    <div className="flex gap-4">
                      {typeof users.data?.link == "string" && (
                        <div className="flex items-center justify-center">
                          <AiOutlineLink />

                          <Link
                            href={users.data?.link}
                            className="text-blue-500 hover:underline"
                          >
                            google.com
                          </Link>
                        </div>
                      )}
                      {users.data?.createdAt != null && (
                        <div className="flex items-center justify-center gap-1">
                          <BsCalendarDate />
                          <span>{users.data?.createdAt.toDateString()}</span>
                        </div>
                      )}
                    </div>
                    <div className="text-1xl flex gap-2">
                      <span className="cursor-pointer text-black hover:underline">
                        <span className="font-bold">
                          {users.data?._count.following}
                        </span>{" "}
                        Volgend
                      </span>
                      <span className="cursor-pointer text-black hover:underline">
                        <span className="font-bold">
                          {users.data?._count.followers}
                        </span>{" "}
                        Volgers
                      </span>
                    </div>
                  </div>
                  <div className="flex flex-grow items-center justify-end">
                    {session?.user.name != users.data?.username ? (
                      <>
                        {status == "authenticated" ? (
                          <>
                            <ProfileFollow
                              hasFollowed={
                                users.data?.followers.some(
                                  (follower) =>
                                    follower.userId == session?.user.id
                                ) || false
                              }
                              onClick={submit}
                            />
                            {users.isSuccess && (
                              <EditProfileModal user={users.data} />
                            )}
                          </>
                        ) : (
                          <></>
                        )}
                      </>
                    ) : (
                      <>
                        {users.isSuccess && (
                          <EditProfileModal user={users.data} />
                        )}
                      </>
                    )}
                    {session?.user.role == "ADMIN" ? (
                      <>
                        <DeleteProfile />
                      </>
                    ) : (
                      ""
                    )}
                  </div>
                </div>

                <div>
                  <PostOfUser userId={users.data?.id || ""} />
                </div>
              </div>
            </div>
          )}
        </Sidebar>
      </main>
    </>
  );
};

export default PageContent;
