import { type NextPage } from "next";
import Head from "next/head";
import Sidebar from "../components/sidebar";
import { CreatePost } from "~/components/form/createPost";
import { api } from "~/utils/api";
import Image from "next/image";
const PageContent: NextPage = () => {
  return (
    <>
      <Head>
        <title>Twitter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Sidebar>
          <div className="m-2 bg-white p-4 shadow-md">
            <CreatePost />
            <div className="mt-4 border-t border-gray-200 pt-4">
              <Posts />
            </div>
          </div>
        </Sidebar>
      </main>
    </>
  );
};
const Posts = () => {
  const posts = api.posts.getAll.useQuery({});
  if (posts.isLoading) return <div>Loading...</div>;
  if (posts.isError) return <div>Error: {posts.error.message}</div>;
  return (
    <>
      {posts.data.map((post) => (
        <div key={post.id + "post"} className="bg-gray-100 p-4 shadow-md">
          <div className="mb-4 flex flex-row text-gray-600">
            {typeof post.User.image == "string" ? (
              <Image
                src={post.User.image}
                alt={"Image"}
                width={40}
                height={40}
                className={"rounded-full"}
              ></Image>
            ) : null}
            <span className="ml-2 text-blue-500">@{post.User.name}</span>
            <span className="ml-2 text-gray-400">
              • Posted {timeSince(post.createdAt)}{" "}
              {post.updatedAt != post.createdAt
                ? "• Last edited " + timeSince(post.updatedAt)
                : ""}
            </span>
          </div>
          <p>{post.text}</p>
        </div>
      ))}
    </>
  );
};
const timeSince = (date: Date): string => {
  // 2 minutes ago, 3 hours ago, 4 days ago, 5 months ago, 6 years ago etc
  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);
  let interval = seconds / 31536000;
  if (interval > 1) {
    // years
    return "on " + date.toLocaleDateString();
  }
  interval = seconds / 2592000;
  if (interval > 1) {
    // months
    return "on " + date.toLocaleDateString();
  }
  interval = seconds / 86400;
  if (interval > 1) {
    return Math.floor(interval).toString() + " days ago";
  }
  interval = seconds / 3600;
  if (interval > 1) {
    return Math.floor(interval).toString() + " hours ago";
  }
  interval = seconds / 60;
  if (interval > 1) {
    return Math.floor(interval).toString() + " minutes ago";
  }
  return Math.floor(seconds).toString() + " seconds ago";
};
export default PageContent;
